[pytest]
# Mini-Mancer Test Configuration

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Test markers
markers =
    factory_bot: Test factory bot functionality
    created_bot: Test created bot functionality
    integration: Test end-to-end bot workflows
    performance: Test performance and concurrency
    api: Test API integration
    slow: Slow tests requiring extended timeouts
    network: Tests requiring Telegram API network access
    unit: Unit tests for individual components
    mock: Tests using mock objects
    cleanup: Tests focusing on resource cleanup
    utility: Tests for utility functions
    tier1: Tier 1 critical core functionality tests
    tier2: Tier 2 essential user experience tests
    tier3: Tier 3 performance and reliability tests
    tier4: Tier 4 integration and advanced features tests
    tier5: Tier 5 comprehensive coverage tests
    comprehensive: Comprehensive integration tests
    final: Final integration tests across all tiers
    user_experience: User experience and interface tests
    critical: Critical functionality that must pass

# Test output
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --durations=10

# Timeout settings (requires pytest-timeout plugin)
# timeout = 300
# timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:telegram.*
    error::pytest.PytestUnraisableExceptionWarning

# Minimum version
minversion = 7.0

# Test paths
testpaths = tests

# Collection (commented out as empty list causes error)
# collect_ignore = []