# Mini-Mancer Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED: Core API Keys
# =============================================================================

# OpenAI API Key for GPT-4o model access
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your_openai_api_key_here

# Agno-AGI API Key for AI agent framework
# Get from: https://agno.ai/dashboard/api-keys
AGNO_API_KEY=ag-your_agno_api_key_here

# =============================================================================
# REQUIRED: Telegram Bot Configuration
# =============================================================================

# Factory Bot Token - Main bot that creates other bots
# Get from: @BotFather on Telegram
BOT_TOKEN=1234567890:ABC-DEF1234ghIkl-zyx57W2v1u123ew11

# Created Bot Token - Token for bots created by the factory
# Get from: @BotFather on Telegram (must be different from BOT_TOKEN)
BOT_TOKEN_1=9876543210:XYZ-ABC9876fedCba-321W9v8u987ew99

# =============================================================================
# OPTIONAL: OpenServ Integration
# =============================================================================

# OpenServ API Configuration (for workflow automation)
OPENSERV_API_KEY=your_openserv_api_key
OPENSERV_SECRET_KEY=your_openserv_secret_key
OPENSERV_URL=http://localhost:8080

# =============================================================================
# OPTIONAL: Enhanced Bot Features
# =============================================================================

# BotMother Specific Token (if different from BOT_TOKEN)
BOT_MOTHER_TOKEN=your_botmother_specific_token
BOT_MOTHER_KEY=your_botmother_api_key

# =============================================================================
# OPTIONAL: Telegram API Integration
# =============================================================================

# Telegram API Credentials (for advanced features)
# Get from: https://my.telegram.org/apps
TELEGRAM_API_ID=12345678
TELEGRAM_API_HASH=your_telegram_api_hash_here

# =============================================================================
# OPTIONAL: Development & Testing
# =============================================================================

# Demo User ID for startup notifications and testing
# Get your user ID from: @userinfobot on Telegram
DEMO_USER=123456789
DEMO_USER_ID=123456789

# Test Bot Token (alternative to BOT_TOKEN for testing)
TEST_BOT_TOKEN=your_test_bot_token_here

# Test Configuration for automated testing
TEST_CHAT_ID=your_test_chat_id
TEST_USER_ID=your_test_user_id

# =============================================================================
# OPTIONAL: Error Monitoring & Debugging
# =============================================================================

# Telegram Error Channel for debugging (highly recommended for development)
# Create a private channel, add your bot as admin, and get the channel ID
# Use @userinfobot to get channel ID or check bot logs for chat IDs
ERROR_CHANNEL_ID=-1001234567890

# Test Channel for monitoring test interactions (recommended for testing)
# Create a private channel for test logs and monitoring
TEST_CHANNEL_ID=-1001234567890

# =============================================================================
# OPTIONAL: Test Monitoring & Rate Limiting
# =============================================================================

# Rate limiting configuration (requests per second per bot)
TELEGRAM_RATE_LIMIT=20

# Test monitoring dashboard (accessible at http://localhost:14159/test-monitor)
# Real-time WebSocket monitoring of bot interactions and API calls
TEST_MONITORING_ENABLED=true

# =============================================================================
# OPTIONAL: Database Configuration
# =============================================================================

# PostgreSQL Database URL (uses Docker by default)
DATABASE_URL=postgresql+psycopg://postgres:postgres@localhost:5432/postgres

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Get your OpenAI API key from https://platform.openai.com/api-keys
# 3. Get your Agno API key from https://agno.ai/dashboard/api-keys
# 4. Create two Telegram bots with @BotFather and get their tokens
# 5. Set BOT_TOKEN and BOT_TOKEN_1 (must be different tokens)
# 6. Optional: Set up error channel for debugging
# 7. Optional: Configure other integrations as needed

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env files to version control
# - Keep API keys secure and rotate them regularly
# - Use different tokens for development and production
# - Set up error channel with restricted access
# - Consider using environment-specific configurations